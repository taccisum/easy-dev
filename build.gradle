buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: 'propdeps-idea'
    apply plugin: 'maven-publish'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8

    group 'cn.tac.framework'
    version '2.3.1'

    dependencies {
        compile(
                ['org.springframework.boot:spring-boot-starter'],
        )
        testCompile(
                ['org.springframework.boot:spring-boot-starter-test'],
        )
        optional "org.springframework.boot:spring-boot-devtools"
        optional "org.springframework.boot:spring-boot-configuration-processor"
        compileJava.dependsOn(processResources)
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }

        repositories {
        }

    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

}
